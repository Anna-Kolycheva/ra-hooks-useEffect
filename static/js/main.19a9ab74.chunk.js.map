{"version":3,"sources":["components/useFetch/useFetch.jsx","components/List/List.jsx","components/Details/Details.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useFetch","url","opts","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","json","fetchData","List","selectUser","process","className","map","item","onClick","name","id","Details","info","height","alt","src","avatar","details","city","company","position","App","setInfo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEe,SAASA,EAASC,GAAmB,IAAdC,EAAa,uDAAN,KAAM,EACxBC,mBAAS,MADe,mBACzCC,EADyC,KACnCC,EADmC,OAEdF,oBAAS,GAFK,mBAEzCG,EAFyC,KAE9BC,EAF8B,OAGtBJ,mBAAS,MAHa,mBAGzCK,EAHyC,KAGlCC,EAHkC,KA2BhD,OAtBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,6DACfJ,GAAa,GADE,kBAGWK,MAAMX,EAAKC,GAHtB,WAGNW,EAHM,QAIEC,GAJF,sBAKH,IAAIC,MAAMF,EAASG,YALhB,uBAQOH,EAASI,OARhB,OAQNA,EARM,OASZZ,EAAQY,GACRR,EAAS,MAVG,kDAYZA,EAAS,EAAD,IAZI,yBAcZF,GAAa,GAdD,6EAAH,qDAkBfW,KACA,CAACjB,EAAKC,IAEF,CAACE,EAAME,EAAWE,G,iBCObW,MA7Bf,YAA+B,IAAfC,EAAc,EAAdA,WAAc,EACMpB,EAAS,GAAD,OACnCqB,uGADmC,eADd,mBACpBjB,EADoB,KACdE,EADc,KACHE,EADG,KAK3B,OACG,sBAAKc,UAAU,OAAf,UACIhB,GAAa,wFACbE,GAAS,oCAAOA,EAAP,OACTJ,GACE,oBAAIkB,UAAU,eAAd,SACIlB,EAAKmB,KAAI,SAACC,GAAD,OACP,oBACGF,UAAU,aAEVG,QAAS,kBAAML,EAAWI,IAH7B,SAKIA,EAAKE,MAHDF,EAAKG,a,MC2BhBC,MA3Cf,YAA4B,IAATC,EAAQ,EAARA,KAAQ,EACS7B,EAAS,GAAD,OACnCqB,wGADmC,OACFQ,EAAKF,GADH,UADjB,mBACjBvB,EADiB,KACXE,EADW,KACAE,EADA,KAKxB,OACG,sBAAKc,UAAU,UAAf,UACIhB,GAAa,wFACbE,GAAS,oCAAOA,EAAP,OACTJ,IAASE,GACP,gCACG,qBACGgB,UAAU,kBACVQ,OAAO,QACPC,IAAK3B,EAAKsB,KACVM,IAAK5B,EAAK6B,SAEb,sBAAKX,UAAU,eAAf,UACG,qBAAKA,UAAU,uCAAf,SACIlB,EAAKsB,OAET,sBAAKJ,UAAU,oBAAf,mBACUlB,EAAK8B,QAAQC,QAEvB,sBAAKb,UAAU,oBAAf,sBACalB,EAAK8B,QAAQE,WAE1B,sBAAKd,UAAU,oBAAf,uBACclB,EAAK8B,QAAQG,sBCjB9BC,MAXf,WAAgB,IAAD,EACYnC,mBAAS,IADrB,mBACL0B,EADK,KACCU,EADD,KAGZ,OACG,sBAAKjB,UAAU,MAAf,UACG,cAAC,EAAD,CAAMF,WAAYmB,IACjBV,EAAKF,GAAK,cAAC,EAAD,CAASE,KAAMA,IAAW,SCC/BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.19a9ab74.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useFetch(url, opts = null) {\n   const [data, setData] = useState(null);\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null);\n\n   useEffect(() => {\n      const fetchData = async () => {\n         setIsLoading(true);\n         try {\n            const response = await fetch(url, opts);\n            if (!response.ok) {\n               throw new Error(response.statusText);\n            }\n\n            const json = await response.json();\n            setData(json);\n            setError(null);\n         } catch (e) {\n            setError(e);\n         } finally {\n            setIsLoading(false);\n         }\n      };\n\n      fetchData();\n   }, [url, opts]);\n\n   return [data, isLoading, error];\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFetch from '../useFetch/useFetch';\nimport './List.css';\n\nfunction List({ selectUser }) {\n   const [data, isLoading, error] = useFetch(\n      `${process.env.REACT_APP_DATA_URL}users.json`\n   );\n\n   return (\n      <div className=\"List\">\n         {isLoading && <div> Загрузка... </div>}\n         {error && <div> {error} </div>}\n         {data && (\n            <ul className=\"List-wrapper\">\n               {data.map((item) => (\n                  <li\n                     className=\"List__item\"\n                     key={item.id}\n                     onClick={() => selectUser(item)}\n                  >\n                     {item.name}\n                  </li>\n               ))}\n            </ul>\n         )}\n      </div>\n   );\n}\n\nList.propTypes = {\n   selectUser: PropTypes.func.isRequired,\n};\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useFetch from '../useFetch/useFetch';\nimport './Details.css';\n\nfunction Details({ info }) {\n   const [data, isLoading, error] = useFetch(\n      `${process.env.REACT_APP_DATA_URL}${info.id}.json`\n   );\n\n   return (\n      <div className=\"Details\">\n         {isLoading && <div> Загрузка... </div>}\n         {error && <div> {error} </div>}\n         {data && !isLoading && (\n            <div>\n               <img\n                  className=\"Details__avatar\"\n                  height=\"300px\"\n                  alt={data.name}\n                  src={data.avatar}\n               />\n               <div className=\"details-text\">\n                  <div className=\"details-text-item details-text-title\">\n                     {data.name}\n                  </div>\n                  <div className=\"details-text-item\">\n                     City: {data.details.city}\n                  </div>\n                  <div className=\"details-text-item\">\n                     Company: {data.details.company}\n                  </div>\n                  <div className=\"details-text-item\">\n                     Position: {data.details.position}\n                  </div>\n               </div>\n            </div>\n         )}\n      </div>\n   );\n}\n\nDetails.propTypes = {\n   info: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n   }).isRequired,\n};\nexport default Details;\n","import './App.css';\nimport React, { useState } from 'react';\nimport List from './components/List/List';\nimport Details from './components/Details/Details';\n\nfunction App() {\n   const [info, setInfo] = useState({});\n\n   return (\n      <div className=\"App\">\n         <List selectUser={setInfo} />\n         {info.id ? <Details info={info} /> : null}\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}